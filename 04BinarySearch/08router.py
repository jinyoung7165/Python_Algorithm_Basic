#집 N개가 수직선 위에 있다. 각 집의 좌표는 x1,x2,..xn이고 겹치지 않는다
#공유기 c개 설치. 최대한 많은 곳에서 와이파이를 사용하려고 하기 때문에 한 집에는 공유기를 하나만 설치가능.가장 인접한 두 공유기 사이의 거리를 가능한 크게.
#c개의 공유기를 n개의 집에 설치. 가장 인접한 두 공유기 사이의 거리를 최대로
#가장 인접한 두 공유기 사이의 거리를 출력
n,c=map(int,input().split()) #집 개수, 공유기 개수
arr=[]
for _ in range(n):#집 좌표 입력
    arr.append(int(input()))
arr.sort()
start=1 #최소 간격
end=arr[-1]-arr[0] #최대 간격(처음 집과 끝 집)
result=0 #가장 인접한 두 공유기 간격(반복문에서 간격을 넓혀나가며 공유기를 설치할 것)
while (start<=end):
    mid=(start+end)//2 #가장 인접한 두 공유기 간격
    value=arr[0] #첫째 집에는 무조건 공유기 설치
    count=1 #현재 설치한 공유기 수
    #현재의 mid값(설치 간격)을 넓히거나 좁혀가며 공유기 설치
    for i in range(1,n): #둘째 집부터 차례대로
        if arr[i]>=value+mid:#설치하려는 위치에 있거나 그보다 앞집과 멀 때
            value=arr[i]#설치
            count+=1#설치한 공유기수 증가
    if count>=c: #c개 이상의 공유기를 설치할 수 있는 경우, 간격을 넓히자
        start=mid+1#최소 간격을 증가시킴
        result=mid #최적의 결과(가장 인접한 공유기 간격)를 저장
    else: #c개 이상의 공유기를 설치할 수 없는경우. 간격을 좁혀서 더 많이 설치하자
        end=mid-1#최대 간격을 감소
print(result)